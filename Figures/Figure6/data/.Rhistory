---
title: "Plots"
output:
html_document:
toc: yes
pdf_document:
toc: yes
---
```{r settings, echo=F, message=F, results='hide', warning = F, eval = T}
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE, eval = TRUE, message = FALSE, warning = FALSE, cache = TRUE, fig = TRUE, global.par = TRUE, dev = 'pdf')
#, dev = 'pdf'
options(width  = 100)
options(scipen = 999)
# Load libraries
library(data.table)
library(ggplot2)
library(reshape2)
library(dplyr)
library(GGally)
library(PerformanceAnalytics)
library(mlbench)
library(caret)
library(glmnet)
library(Hmisc)
library(randomForest)
library(discretization)
# Make sure functions from dplyr are acting as functions from dplyr
filter    <- dplyr::filter
mutate    <- dplyr::mutate
group_by  <- dplyr::group_by
summarize <- dplyr::summarize
select    <- dplyr::select
# Define project directory path
```
```{r aa, echo=F, message=F, results='hide', warning = F, cache = F}
#############################################################################################
library(Hmisc)
library(dplyr)
library(ggplot2)
#------------------------------------------------------------------------------------
#path  <- "D:\\users\\dbrzyski\\Dropbox\\GroupSlopeArticle\\Figures\\Figure6\\data\\";
path  <- "D:\\Dropbox\\GroupSlopeArticle\\Figures\\Figure6\\data\\";
setwd(path)
Genotypes_K   <- read.table("Genotypes_K.txt");
Genotypes_N   <- read.table("Genotypes_N.txt");
Means_K       <- read.table("Means_K.txt");
Means_N       <- read.table("Means_N.txt");
n             <- length(Genotypes_K[,1])
#---------------------------------------------------------------
points    <- c(t(Means_K), t(Means_N))
genotypes <- c("A", "B", "C", "A", "B", "C")
labels    <- c(rep("Known discovery  ", times = 3), rep("New discovery", times = 3) )
#--------------------------------------
df       <- data.frame(points, genotypes, labels)
#--------------------------------------
p <- ggplot(df, aes(x = genotypes, y = points, color = labels, group = labels))
p <- p + geom_line(mapping = aes(x = genotypes, y = points, color = labels), size = 1)
p <- p + scale_x_discrete(breaks = c("A", "B", "C"), labels = c("AA", "Aa", "aa"))
p <- p + geom_point(df, mapping=aes(x = genotypes, y = points, shape = labels, fill = labels), size = 10 )
#p <- p + geom_point(aes(color=labels), size = 5)
#p <- p + scale_color_manual(values=c("blue", "green"))
p <- p + scale_color_manual(values=c("black", "black"))
#p <- p + scale_color_manual(values=c("blue", "green"))
p <- p + scale_shape_manual(values = c(21,22))
#p <- p + scale_fill_manual(values=c("blue", "green"))
p <- p + scale_fill_manual(values=c("blue", "green"))
p <- p + theme_bw(base_size = 25)
p <- p + theme( legend.position = c(.13, .97), legend.justification = c("left", "top"), legend.box.background = element_rect())
p <- p + theme(legend.text=element_text(size=25))
p <- p + theme(legend.title = element_blank())
p <- p + theme(legend.key.size =  unit(.5, "in"))
p <- p + theme(legend.key = element_rect(size = 10))
#p <- p + theme(plot.background = element_rect(fill = 'grey98', colour = 'black'))
p <- p + theme(legend.background = element_rect(colour = 'black'))
p <- p + coord_cartesian( xlim = c(1.5,  2.5) )
p <- p + labs(title="", x = 'Genotype', y = 'Mean of HDL')
p <- p + theme(legend.direction = "horizontal")
#p <- p + geom_point(colour = "black", size = 5)
```
```{r figure6a, fig.width=10, fig.height=8, cache = F}
plot(p)
```
```{r bb, echo=F, message=F, results='hide', warning = F, cache = F}
#---------------------------------------------------------
points    <- c(Genotypes_K[,1], Genotypes_K[,2], Genotypes_K[,3], Genotypes_N[,1], Genotypes_N[,2], Genotypes_N[,3])
genotypes <- c(rep("A", times = n), rep("B", times = n), rep("C", times = n), rep("A", times = n), rep("B", times = n), rep("C", times = n))
labels    <- c(rep("Known discovery  ", times = 3*n), rep("New discovery", times = 3*n) )
#--------------------------------------
df       <- data.frame(points, genotypes, labels)
#--------------------------------------
p <- ggplot(df, aes(x = genotypes, y = points, color = labels))
p <- p + geom_boxplot(aes(fill=labels), outlier.shape=1, position = position_dodge(width=0.7), width = 0.6, lwd=1.1, col = c("black") ) # aes(fill=labels),
p <- p + scale_x_discrete(breaks = c("A", "B", "C"), labels = c("AA", "Aa", "aa"))
p <- p + coord_cartesian(ylim = c(-0.85, 1.30) )
p <- p + labs(title="", x = 'Genotype', y = 'HDL')
p <- p + theme_bw(base_size = 25)
p <- p + theme( legend.position = c(.13, .97), legend.justification = c("left", "top"), legend.box.background = element_rect())
p <- p + theme(legend.text=element_text(size=25))
p <- p + theme(legend.title = element_blank())
p <- p + theme(legend.key.size =  unit(0.5, "in"))
p <- p + theme(legend.key = element_rect(size = 10))#, legend.key.size = unit(1.5, 'lines'))
#p <- p + theme(plot.background = element_rect(fill = 'grey98', colour = 'black'))
p <- p + theme(legend.background = element_rect(colour = 'black'))
p <- p + theme(legend.direction = "horizontal")
p <- p + scale_fill_manual(values = c("blue", "green"))
```
```{r figure6b, fig.width=10, fig.height=8, cache = F}
plot(p)
```
p <- ggplot(df, aes(x = genotypes, y = points, color = labels))
p <- p + geom_boxplot(aes(fill=labels), outlier.shape=1, position = position_dodge(width=0.7), width = 0.6, lwd=1.1, col = c("black") ) # aes(fill=labels),
p <- p + scale_x_discrete(breaks = c("A", "B", "C"), labels = c("AA", "Aa", "aa"))
p <- p + coord_cartesian(ylim = c(-0.85, 3.30) )
p <- p + labs(title="", x = 'Genotype', y = 'HDL')
p <- p + theme_bw(base_size = 25)
p <- p + theme( legend.position = c(.13, .97), legend.justification = c("left", "top"), legend.box.background = element_rect())
p <- p + theme(legend.text=element_text(size=25))
p <- p + theme(legend.title = element_blank())
p <- p + theme(legend.key.size =  unit(0.5, "in"))
p <- p + theme(legend.key = element_rect(size = 10))#, legend.key.size = unit(1.5, 'lines'))
#p <- p + theme(plot.background = element_rect(fill = 'grey98', colour = 'black'))
p <- p + theme(legend.background = element_rect(colour = 'black'))
p <- p + theme(legend.direction = "horizontal")
p <- p + scale_fill_manual(values = c("blue", "green"))
plot(p)
p <- ggplot(df, aes(x = genotypes, y = points, color = labels))
p <- p + geom_boxplot(aes(fill=labels), outlier.shape=1, position = position_dodge(width=0.7), width = 0.6, lwd=1.1, col = c("black") ) # aes(fill=labels),
p <- p + scale_x_discrete(breaks = c("A", "B", "C"), labels = c("AA", "Aa", "aa"))
p <- p + coord_cartesian(ylim = c(-0.85, 3) )
p <- p + labs(title="", x = 'Genotype', y = 'HDL')
p <- p + theme_bw(base_size = 25)
p <- p + theme( legend.position = c(.13, .97), legend.justification = c("left", "top"), legend.box.background = element_rect())
p <- p + theme(legend.text=element_text(size=25))
p <- p + theme(legend.title = element_blank())
p <- p + theme(legend.key.size =  unit(0.5, "in"))
p <- p + theme(legend.key = element_rect(size = 10))#, legend.key.size = unit(1.5, 'lines'))
#p <- p + theme(plot.background = element_rect(fill = 'grey98', colour = 'black'))
p <- p + theme(legend.background = element_rect(colour = 'black'))
p <- p + theme(legend.direction = "horizontal")
p <- p + scale_fill_manual(values = c("blue", "green"))
plot(p)
min(genotypes)
min(points)
View(df)
